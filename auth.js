// === üîπ –ì–ª–æ–±–∞–ª—å–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ Telegram –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ + –∫–µ—à—É–≤–∞–Ω–Ω—è PRO ===
window.addEventListener("DOMContentLoaded", async () => {
  const savedUser = localStorage.getItem("telegram_user");
  if (!savedUser) return console.log("üë§ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π");

  const user = JSON.parse(savedUser);
  window.currentUser = user;

  const lastCheck = Number(localStorage.getItem("pro_last_check") || 0);
  const now = Date.now();
  const cacheValid = now - lastCheck < 5 * 60 * 1000; // 5 —Ö–≤–∏–ª–∏–Ω

  if (cacheValid) {
    console.log("‚ö° –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ –∫–µ—à–æ–≤–∞–Ω–∏–π PRO-—Å—Ç–∞—Ç—É—Å:", localStorage.getItem("isPro"));
    return;
  }

  try {
    const url = (window.APPS_SCRIPT_URL || "").trim();
if (!url) {
  console.warn("‚ö†Ô∏è APPS_SCRIPT_URL –Ω–µ –∑–∞–¥–∞–Ω–æ ‚Äî –ø–µ—Ä–µ–≤—ñ—Ä–∫—É PRO –ø—Ä–æ–ø—É—â–µ–Ω–æ");
  return;
}

try {
  const res = await fetch(url + "?user_id=" + encodeURIComponent(user.id), {
    method: "GET",
    headers: { "Accept": "application/json" }
  });

  if (!res.ok) throw new Error("Server returned " + res.status);

  const text = await res.text();
  let json;
  try {
    json = JSON.parse(text);
  } catch {
    throw new Error("Response is not valid JSON: " + text.slice(0, 100));
  }

  localStorage.setItem("isPro", json.isPro ? "true" : "false");
  localStorage.setItem("pro_last_check", now);
  console.log("üîó PRO –æ–Ω–æ–≤–ª–µ–Ω–æ:", json.isPro);
} catch (err) {
  console.warn("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ PRO:", err.message);
}

  } catch (err) {
    console.warn("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ PRO:", err);
  }
});
